version: '3.8'

services:
  postgres:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    networks:
      - local-keycloak

  keycloak:
    depends_on:
      - postgres
    image: jboss/keycloak
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      KEYCLOAK_USER: admin
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: admin
      KEYCLOAK_PASSWORD: admin 
      KEYCLOAK_IMPORT: /tmp/realm-init/realm-export.json
    ports:
      - "8181:8080"
    volumes:
      - ./realm-init:/tmp/realm-init 
    networks:
      - local-keycloak

  postgresSepring:
    image: postgres
    environment:
      POSTGRES_DB: jumbo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5431:5432"

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
    networks:
      - sonarnet

  sonarqube-db:
    image: postgres:13.2
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube-db-data:/var/lib/postgresql/data
    networks:
      - sonarnet
  
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    ports:
      - "9090:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - jenkinsnet

networks:
  local-keycloak:
  sonarnet:
    driver: bridge
  jenkinsnet:

volumes:
  sonarqube-db-data:
  jenkins_home:
